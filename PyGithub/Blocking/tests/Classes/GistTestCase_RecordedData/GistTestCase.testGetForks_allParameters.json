[
    {
        "request": {
            "body": null,
            "headers": {
                "Accept": "application/vnd.github.v3.full+json",
                "Accept-Encoding": "gzip, deflate, compress",
                "Authorization": "Basic removed=",
                "User-Agent": "jacquev6/PyGithub/2; UnitTests recorder"
            },
            "url": {
                "netloc": "api.github.com",
                "path": "/gists/6296553",
                "query": {},
                "scheme": "https"
            },
            "verb": "GET"
        },
        "response": {
            "body": {
                "comments": 0,
                "comments_url": "https://api.github.com/gists/6296553/comments",
                "commits_url": "https://api.github.com/gists/6296553/commits",
                "created_at": "2013-08-21T16:12:27Z",
                "description": "Github API",
                "files": {
                    "GithubAPI.lua": {
                        "content": "-- GithubAPI\n-- @Author : Hyro Vitaly Protago\n-- @Version : 1.0.0\n \n--[[\nINFOS :\n  - Cannot delete an anonymous gist\n]]--\n \nGithubAPI = {\n    location = \"https://api.github.com/\",\n    token = nil,\n    OAuth = {\n        authorizations = {}\n    },\n    gist = {\n        list = {},\n        comment = {}\n    },\n    github = {}\n}\n \n----------------------------------------------------------------------------\n------------------------------ Github API ----------------------------------\n----------------------------------------------------------------------------\n \n--- Authentication ---\n \n--[[ Scopes --\n \nScopes let you specify exactly what type of access you need. Scopes limit access for OAuth tokens.\nThey do not grant any additional permission beyond that which the user already has.\n \nFor the web flow, requested scopes will be displayed to the user on the authorize form.\n \nCheck headers to see what OAuth scopes you have, and what the API action accepts.\n \n~~~\n$ curl -H \"Authorization: token OAUTH-TOKEN\" https://api.github.com/users/technoweenie -I\nHTTP/1.1 200 OK\nX-OAuth-Scopes: repo, user\nX-Accepted-OAuth-Scopes: user\nX-OAuth-Scopes lists the scopes your token has authorized. X-Accepted-OAuth-Scopes lists the scopes that the action checks for.\n~~~\n \n- (no scope)\npublic read-only access (includes public user profile info, public repo info, and gists).\n- user\nRead/write access to profile info only. Note: this scope includes user:email and user:follow.\n- user:email\nRead access to a user\u2019s email addresses.\n- user:follow\nAccess to follow or unfollow other users.\n- public_repo\nRead/write access to public repos and organizations.\n- repo\nRead/write access to public and private repos and organizations.\n- repo:status\nRead/write access to public and private repository commit statuses.\nThis scope is only necessary to grant other users or services access to private repository commit statuses without granting access to the code.\nThe repo and public_repo scopes already include access to commit status for private and public repositories respectively.\n- delete_repo\nDelete access to adminable repositories.\n- notifications\nRead access to a user\u2019s notifications. repo is accepted too.\n- gist\nWrite access to gists.\n \nNOTE: Your application can request the scopes in the initial redirection. You can specify multiple scopes by separating them by a comma.\n~~~\nhttps://github.com/login/oauth/authorize?\n  client_id=...&\n  scope=user,public_repo\n~~~\n]]--\n \n-- Redirect users to request GitHub access --\nfunction GithubAPI.OAuth.getToken(client_id, scope, callback)\n    GithubAPI.http_request(\"https://github.com/login/oauth/authorize?client_id=\"..client_id..\"&scope=\"..scope, function(data, status, headers)\n        GithubAPI.OAuth._getToken(client_id, client_secret, data, callback)\n    end, nil, true)\nend\n-- GitHub redirects back to your site --\nfunction GithubAPI.OAuth._getToken(client_id, client_secret, code, callback)\n    GithubAPI.http_request(\"https://github.com/login/oauth/access_token\", callback, {\n        method = \"POST\",\n        data = {\n            client_id = client_id,\n            client_secret = client_secret,\n            code = code\n        }\n    }, true)\nend\n \n-- List your authorizations --\nfunction GithubAPI.OAuth.authorizations.list(callback)\n    GithubAPI.http_request(\"authorizations\", callback)\nend\n \n--[[ Response --\nStatus: 200 OK\nLink: <https://api.github.com/resource?page=2>; rel=\"next\",\n      <https://api.github.com/resource?page=5>; rel=\"last\"\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n[\n  {\n    \"id\": 1,\n    \"url\": \"https://api.github.com/authorizations/1\",\n    \"scopes\": [\n      \"public_repo\"\n    ],\n    \"token\": \"abc123\",\n    \"app\": {\n      \"url\": \"http://my-github-app.com\",\n      \"name\": \"my github app\",\n      \"client_id\": \"abcde12345fghij67890\"\n    },\n    \"note\": \"optional note\",\n    \"note_url\": \"http://optional/note/url\",\n    \"updated_at\": \"2011-09-06T20:39:23Z\",\n    \"created_at\": \"2011-09-06T17:26:27Z\"\n  }\n]\n]]--\n \n-- Get a single authorization --\nfunction GithubAPI.OAuth.authorizations.get(id, callback)\n    GithubAPI.http_request(\"authorizations/\"..id, callback)\nend\n \n--[[ Response --\nStatus: 200 OK\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n{\n  \"id\": 1,\n  \"url\": \"https://api.github.com/authorizations/1\",\n  \"scopes\": [\n    \"public_repo\"\n  ],\n  \"token\": \"abc123\",\n  \"app\": {\n    \"url\": \"http://my-github-app.com\",\n    \"name\": \"my github app\",\n    \"client_id\": \"abcde12345fghij67890\"\n  },\n  \"note\": \"optional note\",\n  \"note_url\": \"http://optional/note/url\",\n  \"updated_at\": \"2011-09-06T20:39:23Z\",\n  \"created_at\": \"2011-09-06T17:26:27Z\"\n}\n]]--\n \n-- Create a new authorization --\nfunction GithubAPI.OAuth.authorizations.create(callback, scopes, note, note_url, client_id, client_secret)\n    GithubAPI.http_request(\"authorizations/\", callback, {\n        method = \"POST\",\n        data = {\n            scopes = scopes,\n            note = note,\n            note_url = note_url,\n            client_id = client_id,\n            client_secret = client_secret\n        }\n    })\nend\n \n--[[ Input --\nscopes\nOptional array - A list of scopes that this authorization is in.\n \nnote\nOptional string - A note to remind you what the OAuth token is for.\n \nnote_url\nOptional string - A URL to remind you what app the OAuth token is for.\n \nclient_id\nOptional String - The 20 character OAuth app client key for which to create the token.\n \nclient_secret\nOptional String - The 40 character OAuth app client secret for which to create the token.\n~~~\n{\n  \"scopes\": [\n    \"public_repo\"\n  ],\n  \"note\": \"admin script\"\n}\n~~~\n]]--\n \n--[[ Response --\nStatus: 201 Created\nLocation: https://api.github.com/authorizations/1\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n{\n  \"id\": 1,\n  \"url\": \"https://api.github.com/authorizations/1\",\n  \"scopes\": [\n    \"public_repo\"\n  ],\n  \"token\": \"abc123\",\n  \"app\": {\n    \"url\": \"http://my-github-app.com\",\n    \"name\": \"my github app\",\n    \"client_id\": \"abcde12345fghij67890\"\n  },\n  \"note\": \"optional note\",\n  \"note_url\": \"http://optional/note/url\",\n  \"updated_at\": \"2011-09-06T20:39:23Z\",\n  \"created_at\": \"2011-09-06T17:26:27Z\"\n}\n]]--\n \n-- TODO\n-- Update\n-- Check\n-- Delete\n \n--- GISTS ---\n \n-- List gists --\nfunction GithubAPI.gist.list.user(user, callback)\n    GithubAPI.http_request(\"users/\"..user..\"/gists\", callback)\nend\nfunction GithubAPI.gist.list.all(callback) -- return all public gists if called anonymously\n    GithubAPI.http_request(\"gists\", callback)\nend\nfunction GithubAPI.gist.list.allPublic(callback)\n    GithubAPI.http_request(\"gists/public\", callback)\nend\nfunction GithubAPI.gist.list.starred(callback)\n    GithubAPI.http_request(\"gists/starred\", callback)\nend\n \n--[[ Response --\nStatus: 200 OK\nLink: <https://api.github.com/resource?page=2>; rel=\"next\",\n      <https://api.github.com/resource?page=5>; rel=\"last\"\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n[\n  {\n    \"url\": \"https://api.github.com/gists/88a3112be74ba6ad701e\",\n    \"id\": \"1\",\n    \"description\": \"description of gist\",\n    \"public\": true,\n    \"user\": {\n      \"login\": \"octocat\",\n      \"id\": 1,\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"gravatar_id\": \"somehexcode\",\n      \"url\": \"https://api.github.com/users/octocat\"\n    },\n    \"files\": {\n      \"ring.erl\": {\n        \"size\": 932,\n        \"filename\": \"ring.erl\",\n        \"raw_url\": \"https://gist.github.com/raw/365370/8c4d2d43d178df44f4c03a7f2ac0ff512853564e/ring.erl\"\n      }\n    },\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/gists/8438e99468ee9a4ab10e/comments/\",\n    \"html_url\": \"https://gist.github.com/1\",\n    \"git_pull_url\": \"git://gist.github.com/1.git\",\n    \"git_push_url\": \"git@gist.github.com:1.git\",\n    \"created_at\": \"2010-04-14T02:15:15Z\"\n  }\n]\n]]--\n \n-- Get a single gist --\nfunction GithubAPI.gist.get(id, callback)\n    GithubAPI.http_request(\"gists/\"..id, callback)\nend\n \n--[[ Response --\nStatus: 200 OK\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n{\n  \"url\": \"https://api.github.com/gists/88a3112be74ba6ad701e\",\n  \"id\": \"1\",\n  \"description\": \"description of gist\",\n  \"public\": true,\n  \"user\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"somehexcode\",\n    \"url\": \"https://api.github.com/users/octocat\"\n  },\n  \"files\": {\n    \"ring.erl\": {\n      \"size\": 932,\n      \"filename\": \"ring.erl\",\n      \"raw_url\": \"https://gist.github.com/raw/365370/8c4d2d43d178df44f4c03a7f2ac0ff512853564e/ring.erl\"\n    }\n  },\n  \"comments\": 0,\n  \"comments_url\": \"https://api.github.com/gists/8438e99468ee9a4ab10e/comments/\",\n  \"html_url\": \"https://gist.github.com/1\",\n  \"git_pull_url\": \"git://gist.github.com/1.git\",\n  \"git_push_url\": \"git@gist.github.com:1.git\",\n  \"created_at\": \"2010-04-14T02:15:15Z\",\n  \"forks\": [\n    {\n      \"user\": {\n        \"login\": \"octocat\",\n        \"id\": 1,\n        \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n        \"gravatar_id\": \"somehexcode\",\n        \"url\": \"https://api.github.com/users/octocat\"\n      },\n      \"url\": \"https://api.github.com/gists/add0d71b065f55c46f60\",\n      \"created_at\": \"2011-04-14T16:00:49Z\"\n    }\n  ],\n  \"history\": [\n    {\n      \"url\": \"https://api.github.com/gists/80bdb0d081c447600e18\",\n      \"version\": \"57a7f021a713b1c5a6a199b54cc514735d2d462f\",\n      \"user\": {\n        \"login\": \"octocat\",\n        \"id\": 1,\n        \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n        \"gravatar_id\": \"somehexcode\",\n        \"url\": \"https://api.github.com/users/octocat\"\n      },\n      \"change_status\": {\n        \"deletions\": 0,\n        \"additions\": 180,\n        \"total\": 180\n      },\n      \"committed_at\": \"2010-04-14T02:15:15Z\"\n    }\n  ]\n}\n]]--\n \n-- Create a gist --\nfunction GithubAPI.gist.create(public, files, callback ,description)\n    GithubAPI.http_request(\"gists/\"..id, callback, {\n        method = \"POST\",\n        data = {\n            public = public,\n            files = files,\n            description = description\n        }\n    })\nend\n \n--[[ Input --\n{\n  \"description\": \"the description for this gist\",\n  \"public\": true,\n  \"files\": {\n    \"file1.txt\": {\n      \"content\": \"String file contents\"\n    }\n  }\n}\n]]--\n \n--[[ Response --\nStatus: 201 Created\nLocation: https://api.github.com/gists/1\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n{\n  \"url\": \"https://api.github.com/gists/88a3112be74ba6ad701e\",\n  \"id\": \"1\",\n  \"description\": \"description of gist\",\n  \"public\": true,\n  \"user\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"somehexcode\",\n    \"url\": \"https://api.github.com/users/octocat\"\n  },\n  \"files\": {\n    \"ring.erl\": {\n      \"size\": 932,\n      \"filename\": \"ring.erl\",\n      \"raw_url\": \"https://gist.github.com/raw/365370/8c4d2d43d178df44f4c03a7f2ac0ff512853564e/ring.erl\"\n    }\n  },\n  \"comments\": 0,\n  \"comments_url\": \"https://api.github.com/gists/8438e99468ee9a4ab10e/comments/\",\n  \"html_url\": \"https://gist.github.com/1\",\n  \"git_pull_url\": \"git://gist.github.com/1.git\",\n  \"git_push_url\": \"git@gist.github.com:1.git\",\n  \"created_at\": \"2010-04-14T02:15:15Z\",\n  \"forks\": [\n    {\n      \"user\": {\n        \"login\": \"octocat\",\n        \"id\": 1,\n        \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n        \"gravatar_id\": \"somehexcode\",\n        \"url\": \"https://api.github.com/users/octocat\"\n      },\n      \"url\": \"https://api.github.com/gists/add0d71b065f55c46f60\",\n      \"created_at\": \"2011-04-14T16:00:49Z\"\n    }\n  ],\n  \"history\": [\n    {\n      \"url\": \"https://api.github.com/gists/80bdb0d081c447600e18\",\n      \"version\": \"57a7f021a713b1c5a6a199b54cc514735d2d462f\",\n      \"user\": {\n        \"login\": \"octocat\",\n        \"id\": 1,\n        \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n        \"gravatar_id\": \"somehexcode\",\n        \"url\": \"https://api.github.com/users/octocat\"\n      },\n      \"change_status\": {\n        \"deletions\": 0,\n        \"additions\": 180,\n        \"total\": 180\n      },\n      \"committed_at\": \"2010-04-14T02:15:15Z\"\n    }\n  ]\n}\n]]--\n \n-- Edit a gist --\nfunction GithubAPI.gist.edit(id, files, callback, description)\n    GithubAPI.http_request(\"gists/\"..id, callback, {\n        method = \"PATCH\",\n        data = {\n            id = id,\n            files = files,\n            description = description\n        }\n    })\nend\n \n--[[ Input --\n{\n  \"description\": \"the description for this gist\",\n  \"files\": {\n    \"file1.txt\": {\n      \"content\": \"updated file contents\"\n    },\n    \"old_name.txt\": {\n      \"filename\": \"new_name.txt\",\n      \"content\": \"modified contents\"\n    },\n    \"new_file.txt\": {\n      \"content\": \"a new file\"\n    },\n    \"delete_this_file.txt\": null\n  }\n}\n]]--\n \n--[[ Response --\nStatus: 200 OK\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n{\n  \"url\": \"https://api.github.com/gists/88a3112be74ba6ad701e\",\n  \"id\": \"1\",\n  \"description\": \"description of gist\",\n  \"public\": true,\n  \"user\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"somehexcode\",\n    \"url\": \"https://api.github.com/users/octocat\"\n  },\n  \"files\": {\n    \"ring.erl\": {\n      \"size\": 932,\n      \"filename\": \"ring.erl\",\n      \"raw_url\": \"https://gist.github.com/raw/365370/8c4d2d43d178df44f4c03a7f2ac0ff512853564e/ring.erl\"\n    }\n  },\n  \"comments\": 0,\n  \"comments_url\": \"https://api.github.com/gists/8438e99468ee9a4ab10e/comments/\",\n  \"html_url\": \"https://gist.github.com/1\",\n  \"git_pull_url\": \"git://gist.github.com/1.git\",\n  \"git_push_url\": \"git@gist.github.com:1.git\",\n  \"created_at\": \"2010-04-14T02:15:15Z\",\n  \"forks\": [\n    {\n      \"user\": {\n        \"login\": \"octocat\",\n        \"id\": 1,\n        \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n        \"gravatar_id\": \"somehexcode\",\n        \"url\": \"https://api.github.com/users/octocat\"\n      },\n      \"url\": \"https://api.github.com/gists/add0d71b065f55c46f60\",\n      \"created_at\": \"2011-04-14T16:00:49Z\"\n    }\n  ],\n  \"history\": [\n    {\n      \"url\": \"https://api.github.com/gists/80bdb0d081c447600e18\",\n      \"version\": \"57a7f021a713b1c5a6a199b54cc514735d2d462f\",\n      \"user\": {\n        \"login\": \"octocat\",\n        \"id\": 1,\n        \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n        \"gravatar_id\": \"somehexcode\",\n        \"url\": \"https://api.github.com/users/octocat\"\n      },\n      \"change_status\": {\n        \"deletions\": 0,\n        \"additions\": 180,\n        \"total\": 180\n      },\n      \"committed_at\": \"2010-04-14T02:15:15Z\"\n    }\n  ]\n}\n]]--\n \n-- Star a gist --\nfunction GithubAPI.gist.star(id, callback)\n    GithubAPI.http_request(\"gists/\"..id..\"/star\", callback, {method=\"PUT\"})\nend\n \n--[[ Response --\nStatus: 204 No Content\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n]]--\n \n-- Unstar a gist --\nfunction GithubAPI.gist.unstar(id, callback)\n    GithubAPI.http_request(\"gists/\"..id..\"/star\", callback, {method=\"DELETE\"})\nend\n \n--[[ Response --\nStatus: 204 No Content\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n]]--\n \n-- Check if a gist is starred --\nfunction GithubAPI.gist.checkStar(id, callback)\n    GithubAPI.http_request(\"gists/\"..id..\"/star\", callback)\nend\n \n--[[\n-- Response if gist is starred --\nStatus: 204 No Content\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n \n-- Response if gist is not starred --\nStatus: 404 Not Found\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n]]--\n \n-- Fork a gist --\nfunction GithubAPI.gist.fork(id, callback)\n    GithubAPI.http_request(\"gists/\"..id..\"/forks\", callback, {method=\"POST\"})\nend\n \n--[[ Response --\nStatus: 201 Created\nLocation: https://api.github.com/gists/2\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n{\n  \"url\": \"https://api.github.com/gists/88a3112be74ba6ad701e\",\n  \"id\": \"1\",\n  \"description\": \"description of gist\",\n  \"public\": true,\n  \"user\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"somehexcode\",\n    \"url\": \"https://api.github.com/users/octocat\"\n  },\n  \"files\": {\n    \"ring.erl\": {\n      \"size\": 932,\n      \"filename\": \"ring.erl\",\n      \"raw_url\": \"https://gist.github.com/raw/365370/8c4d2d43d178df44f4c03a7f2ac0ff512853564e/ring.erl\"\n    }\n  },\n  \"comments\": 0,\n  \"comments_url\": \"https://api.github.com/gists/8438e99468ee9a4ab10e/comments/\",\n  \"html_url\": \"https://gist.github.com/1\",\n  \"git_pull_url\": \"git://gist.github.com/1.git\",\n  \"git_push_url\": \"git@gist.github.com:1.git\",\n  \"created_at\": \"2010-04-14T02:15:15Z\"\n}\n]]--\n \n-- Delete a gist --\nfunction GithubAPI.gist.delete(id, callback)\n    GithubAPI.http_request(\"gists/\"..id, callback, {method=\"DELETE\"})\nend\n \n--[[ Response --\nStatus: 204 No Content\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n]]--\n \n--- GISTS COMMENTS ---\n \n-- List comments on a gist --\nfunction GithubAPI.gist.comment.list(gist_id, callback)\n    GithubAPI.http_request(\"gists/\"..gist_id..\"/comments\", callback)\nend\n \n--[[ Response --\nStatus: 200 OK\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n[\n  {\n    \"id\": 1,\n    \"url\": \"https://api.github.com/gists/ae709e9cf889e485e65f/comments/1\",\n    \"body\": \"Just commenting for the sake of commenting\",\n    \"user\": {\n      \"login\": \"octocat\",\n      \"id\": 1,\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"gravatar_id\": \"somehexcode\",\n      \"url\": \"https://api.github.com/users/octocat\"\n    },\n    \"created_at\": \"2011-04-18T23:23:56Z\"\n  }\n]\n]]--\n \n-- Get a single comment --\nfunction GithubAPI.gist.comment.get(gist_id, id, callback)\n    GithubAPI.http_request(\"gists/\"..gist_id..\"/comments/\"..id, callback)\nend\n \n--[[ Response --\nStatus: 200 OK\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n{\n  \"id\": 1,\n  \"url\": \"https://api.github.com/gists/ae709e9cf889e485e65f/comments/1\",\n  \"body\": \"Just commenting for the sake of commenting\",\n  \"user\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"somehexcode\",\n    \"url\": \"https://api.github.com/users/octocat\"\n  },\n  \"created_at\": \"2011-04-18T23:23:56Z\"\n}\n]]--\n \n-- Create a comment --\nfunction GithubAPI.gist.comment.create(gist_id, body, callback)\n    GithubAPI.http_request(\"gists/\"..gist_id..\"/comments\", callback, {\n        method = \"POST\",\n        data = {\n            body = body\n        }\n    })\nend\n \n--[[ Input --\n{\n  \"body\": \"Just commenting for the sake of commenting\"\n}\n]]--\n--[[ Response --\nStatus: 201 Created\nLocation: https://api.github.com/gists/comments/1\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n{\n  \"id\": 1,\n  \"url\": \"https://api.github.com/gists/ae709e9cf889e485e65f/comments/1\",\n  \"body\": \"Just commenting for the sake of commenting\",\n  \"user\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"somehexcode\",\n    \"url\": \"https://api.github.com/users/octocat\"\n  },\n  \"created_at\": \"2011-04-18T23:23:56Z\"\n}\n]]--\n \n-- Edit a comment --\nfunction GithubAPI.gist.comment.edit(gist_id, id, body, callback)\n    GithubAPI.http_request(\"gists/\"..gist_id..\"/comments/\"..id, callback, {\n        method = \"PATCH\",\n        data = {\n            body = body\n        }\n    })\nend\n \n--[[ Input --\n{\n  \"body\": \"Just commenting for the sake of commenting\"\n}\n]]--\n--[[ Response --\nStatus: 200 OK\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n{\n  \"id\": 1,\n  \"url\": \"https://api.github.com/gists/ae709e9cf889e485e65f/comments/1\",\n  \"body\": \"Just commenting for the sake of commenting\",\n  \"user\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"somehexcode\",\n    \"url\": \"https://api.github.com/users/octocat\"\n  },\n  \"created_at\": \"2011-04-18T23:23:56Z\"\n}\n]]--\n \n-- Delete a comment --\nfunction GithubAPI.gist.comment.delete(gist_id, id, callback)\n    GithubAPI.http_request(\"gists/\"..gist_id..\"/comments/\"..id, callback, {method = \"DELETE\"})\nend\n \n--[[ Response --\nStatus: 204 No Content\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\n]]--\n \n----------------------------------------------------------------------------\n-------------------------------- TOOLS -------------------------------------\n----------------------------------------------------------------------------\n \nfunction GithubAPI.http_request(url, callback, opts, fullUrl)\n    opts = opts or {}\n    if GithubAPI.token then opts.headers = {Authorization = \"Bearer \" .. GithubAPI.token} end\n    if opts.data then opts.data = json.encode(opts.data) end\n \n    local _url\n    if (fullUrl) then _url = url else _url = GithubAPI.location .. url end\n \n    http.request(_url, function(data, status, headers)\n        if (status == 500) then error(\"Github: Internal Server Error ...\") end\n        data = json.decode(data)\n        callback(data, status, headers)\n    end, alert, opts)\nend\n \nfunction GithubAPI.explode(div,str) -- credit: http://richard.warburton.it\n  if (div=='') then return false end\n  local pos,arr = 0,{}\n  for st,sp in function() return string.find(str,div,pos,true) end do\n    table.insert(arr,string.sub(str,pos,st-1))\n    pos = sp + 1\n  end\n  table.insert(arr,string.sub(str,pos))\n  return arr\nend\n \n-- GITHUB TIMESTAMP (YYYY-MM-DDTHH:MM:SSZ) to os.time\nfunction GithubAPI.gtimestamp(githubTime)\n    githubTime = githubTime:sub(1, #githubTime-1) -- remove Z\n    githubTime = GithubAPI.explode(\"T\", githubTime)\n    githubTime[1] = GithubAPI.explode(\"-\", githubTime[1])\n    githubTime[2] = GithubAPI.explode(\":\", githubTime[2])\n    return os.time({\n        year = tonumber(githubTime[1][1]),\n        month = tonumber(githubTime[1][2]),\n        day = tonumber(githubTime[1][3]),\n        hour = tonumber(githubTime[2][1]),\n        min = tonumber(githubTime[2][2]),\n        sec = tonumber(githubTime[2][3])\n    })\nend\n",
                        "filename": "GithubAPI.lua",
                        "language": "Lua",
                        "raw_url": "https://gist.githubusercontent.com/HyroVitalyProtago/6296553/raw/8987c880c6dfff354a6b8a429332684deebf59c9/GithubAPI.lua",
                        "size": 21799,
                        "truncated": false,
                        "type": "text/plain"
                    }
                },
                "forks": [
                    {
                        "created_at": "2013-08-21T16:28:24Z",
                        "id": "6296732",
                        "updated_at": "2013-08-21T16:28:24Z",
                        "url": "https://api.github.com/gists/6296732",
                        "user": {
                            "avatar_url": "https://avatars.githubusercontent.com/u/327146?",
                            "events_url": "https://api.github.com/users/jacquev6/events{/privacy}",
                            "followers_url": "https://api.github.com/users/jacquev6/followers",
                            "following_url": "https://api.github.com/users/jacquev6/following{/other_user}",
                            "gists_url": "https://api.github.com/users/jacquev6/gists{/gist_id}",
                            "gravatar_id": "b68de5ae38616c296fa345d2b9df2225",
                            "html_url": "https://github.com/jacquev6",
                            "id": 327146,
                            "login": "jacquev6",
                            "organizations_url": "https://api.github.com/users/jacquev6/orgs",
                            "received_events_url": "https://api.github.com/users/jacquev6/received_events",
                            "repos_url": "https://api.github.com/users/jacquev6/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/jacquev6/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/jacquev6/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/jacquev6"
                        }
                    },
                    {
                        "created_at": "2013-10-23T14:58:30Z",
                        "id": "7120387",
                        "updated_at": "2013-10-23T14:58:30Z",
                        "url": "https://api.github.com/gists/7120387",
                        "user": {
                            "avatar_url": "https://avatars.githubusercontent.com/u/228958?",
                            "events_url": "https://api.github.com/users/lusis/events{/privacy}",
                            "followers_url": "https://api.github.com/users/lusis/followers",
                            "following_url": "https://api.github.com/users/lusis/following{/other_user}",
                            "gists_url": "https://api.github.com/users/lusis/gists{/gist_id}",
                            "gravatar_id": "03a966709300efb4a86ce5ee8f88f696",
                            "html_url": "https://github.com/lusis",
                            "id": 228958,
                            "login": "lusis",
                            "organizations_url": "https://api.github.com/users/lusis/orgs",
                            "received_events_url": "https://api.github.com/users/lusis/received_events",
                            "repos_url": "https://api.github.com/users/lusis/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/lusis/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/lusis/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/lusis"
                        }
                    }
                ],
                "forks_url": "https://api.github.com/gists/6296553/forks",
                "git_pull_url": "https://gist.github.com/6296553.git",
                "git_push_url": "https://gist.github.com/6296553.git",
                "history": [
                    {
                        "change_status": {
                            "additions": 3,
                            "deletions": 3,
                            "total": 6
                        },
                        "committed_at": "2013-08-22T20:18:59Z",
                        "url": "https://api.github.com/gists/6296553/6f3dea7d17f6a2d369506f5691fe4493a25a4dc2",
                        "user": {
                            "avatar_url": "https://avatars.githubusercontent.com/u/3470988?",
                            "events_url": "https://api.github.com/users/HyroVitalyProtago/events{/privacy}",
                            "followers_url": "https://api.github.com/users/HyroVitalyProtago/followers",
                            "following_url": "https://api.github.com/users/HyroVitalyProtago/following{/other_user}",
                            "gists_url": "https://api.github.com/users/HyroVitalyProtago/gists{/gist_id}",
                            "gravatar_id": "ed59562b231a649345f38703948f76f4",
                            "html_url": "https://github.com/HyroVitalyProtago",
                            "id": 3470988,
                            "login": "HyroVitalyProtago",
                            "organizations_url": "https://api.github.com/users/HyroVitalyProtago/orgs",
                            "received_events_url": "https://api.github.com/users/HyroVitalyProtago/received_events",
                            "repos_url": "https://api.github.com/users/HyroVitalyProtago/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/HyroVitalyProtago/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/HyroVitalyProtago/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/HyroVitalyProtago"
                        },
                        "version": "6f3dea7d17f6a2d369506f5691fe4493a25a4dc2"
                    },
                    {
                        "change_status": {
                            "additions": 159,
                            "deletions": 160,
                            "total": 319
                        },
                        "committed_at": "2013-08-21T20:04:57Z",
                        "url": "https://api.github.com/gists/6296553/6284a77c1c6214e24e0b1de12a5d8fae55f15841",
                        "user": null,
                        "version": "6284a77c1c6214e24e0b1de12a5d8fae55f15841"
                    },
                    {
                        "change_status": {
                            "additions": 793,
                            "deletions": 0,
                            "total": 793
                        },
                        "committed_at": "2013-08-21T16:12:27Z",
                        "url": "https://api.github.com/gists/6296553/c464aecd7fea16684e935607eeea7ae4f8caa0e2",
                        "user": null,
                        "version": "c464aecd7fea16684e935607eeea7ae4f8caa0e2"
                    }
                ],
                "html_url": "https://gist.github.com/6296553",
                "id": "6296553",
                "owner": {
                    "avatar_url": "https://avatars.githubusercontent.com/u/3470988?",
                    "events_url": "https://api.github.com/users/HyroVitalyProtago/events{/privacy}",
                    "followers_url": "https://api.github.com/users/HyroVitalyProtago/followers",
                    "following_url": "https://api.github.com/users/HyroVitalyProtago/following{/other_user}",
                    "gists_url": "https://api.github.com/users/HyroVitalyProtago/gists{/gist_id}",
                    "gravatar_id": "ed59562b231a649345f38703948f76f4",
                    "html_url": "https://github.com/HyroVitalyProtago",
                    "id": 3470988,
                    "login": "HyroVitalyProtago",
                    "organizations_url": "https://api.github.com/users/HyroVitalyProtago/orgs",
                    "received_events_url": "https://api.github.com/users/HyroVitalyProtago/received_events",
                    "repos_url": "https://api.github.com/users/HyroVitalyProtago/repos",
                    "site_admin": false,
                    "starred_url": "https://api.github.com/users/HyroVitalyProtago/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/HyroVitalyProtago/subscriptions",
                    "type": "User",
                    "url": "https://api.github.com/users/HyroVitalyProtago"
                },
                "public": true,
                "updated_at": "2013-10-23T14:58:31Z",
                "url": "https://api.github.com/gists/6296553",
                "user": null
            },
            "headers": {
                "access-control-allow-credentials": "true",
                "access-control-allow-origin": "*",
                "access-control-expose-headers": "ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval",
                "cache-control": "private, max-age=60, s-maxage=60",
                "content-encoding": "gzip",
                "content-security-policy": "default-src 'none'",
                "content-type": "application/json; charset=utf-8",
                "date": "Sat, 12 Jul 2014 04:07:09 GMT",
                "etag": "\"710b37d0df856a3991d22eea08e86317\"",
                "last-modified": "Fri, 11 Jul 2014 19:15:54 GMT",
                "server": "GitHub.com",
                "status": "200 OK",
                "strict-transport-security": "max-age=31536000; includeSubdomains",
                "transfer-encoding": "chunked",
                "vary": "Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding",
                "x-content-type-options": "nosniff",
                "x-frame-options": "deny",
                "x-github-media-type": "github.v3; param=full; format=json",
                "x-github-request-id": "62E81D14:5937:864FC06:53C0B46D",
                "x-ratelimit-limit": "5000",
                "x-ratelimit-remaining": "4737",
                "x-ratelimit-reset": "1405138218",
                "x-served-by": "c436b2b44345c72ff906059f604991e7",
                "x-xss-protection": "1; mode=block"
            },
            "status": 200
        }
    },
    {
        "request": {
            "body": null,
            "headers": {
                "Accept": "application/vnd.github.v3.full+json",
                "Accept-Encoding": "gzip, deflate, compress",
                "Authorization": "Basic removed=",
                "User-Agent": "jacquev6/PyGithub/2; UnitTests recorder"
            },
            "url": {
                "netloc": "api.github.com",
                "path": "/gists/6296553/forks",
                "query": {
                    "per_page": "1"
                },
                "scheme": "https"
            },
            "verb": "GET"
        },
        "response": {
            "body": [
                {
                    "comments": 0,
                    "comments_url": "https://api.github.com/gists/6296732/comments",
                    "commits_url": "https://api.github.com/gists/6296732/commits",
                    "created_at": "2013-08-21T16:28:24Z",
                    "description": "Github API",
                    "files": {},
                    "forks_url": "https://api.github.com/gists/6296732/forks",
                    "git_pull_url": "https://gist.github.com/6296732.git",
                    "git_push_url": "https://gist.github.com/6296732.git",
                    "html_url": "https://gist.github.com/6296732",
                    "id": "6296732",
                    "owner": {
                        "avatar_url": "https://avatars.githubusercontent.com/u/327146?",
                        "events_url": "https://api.github.com/users/jacquev6/events{/privacy}",
                        "followers_url": "https://api.github.com/users/jacquev6/followers",
                        "following_url": "https://api.github.com/users/jacquev6/following{/other_user}",
                        "gists_url": "https://api.github.com/users/jacquev6/gists{/gist_id}",
                        "gravatar_id": "b68de5ae38616c296fa345d2b9df2225",
                        "html_url": "https://github.com/jacquev6",
                        "id": 327146,
                        "login": "jacquev6",
                        "organizations_url": "https://api.github.com/users/jacquev6/orgs",
                        "received_events_url": "https://api.github.com/users/jacquev6/received_events",
                        "repos_url": "https://api.github.com/users/jacquev6/repos",
                        "site_admin": false,
                        "starred_url": "https://api.github.com/users/jacquev6/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/jacquev6/subscriptions",
                        "type": "User",
                        "url": "https://api.github.com/users/jacquev6"
                    },
                    "public": true,
                    "updated_at": "2013-08-21T16:28:24Z",
                    "url": "https://api.github.com/gists/6296732",
                    "user": null
                }
            ],
            "headers": {
                "access-control-allow-credentials": "true",
                "access-control-allow-origin": "*",
                "access-control-expose-headers": "ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval",
                "cache-control": "private, max-age=60, s-maxage=60",
                "content-encoding": "gzip",
                "content-security-policy": "default-src 'none'",
                "content-type": "application/json; charset=utf-8",
                "date": "Sat, 12 Jul 2014 04:07:09 GMT",
                "etag": "\"603a056b9a73c34a0e12354c274d5918\"",
                "last-modified": "Fri, 11 Jul 2014 19:15:54 GMT",
                "link": "<https://api.github.com/gists/6296553/forks?per_page=1&page=2>; rel=\"next\", <https://api.github.com/gists/6296553/forks?per_page=1&page=2>; rel=\"last\"",
                "server": "GitHub.com",
                "status": "200 OK",
                "strict-transport-security": "max-age=31536000; includeSubdomains",
                "transfer-encoding": "chunked",
                "vary": "Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding",
                "x-content-type-options": "nosniff",
                "x-frame-options": "deny",
                "x-github-media-type": "github.v3; param=full; format=json",
                "x-github-request-id": "62E81D14:5937:864FC9A:53C0B46D",
                "x-ratelimit-limit": "5000",
                "x-ratelimit-remaining": "4736",
                "x-ratelimit-reset": "1405138218",
                "x-served-by": "6d7de9e645814cac34ea2a8d72ba3141",
                "x-xss-protection": "1; mode=block"
            },
            "status": 200
        }
    },
    {
        "request": {
            "body": null,
            "headers": {
                "Accept": "application/vnd.github.v3.full+json",
                "Accept-Encoding": "gzip, deflate, compress",
                "Authorization": "Basic removed=",
                "User-Agent": "jacquev6/PyGithub/2; UnitTests recorder"
            },
            "url": {
                "netloc": "api.github.com",
                "path": "/gists/6296553/forks",
                "query": {
                    "page": "2",
                    "per_page": "1"
                },
                "scheme": "https"
            },
            "verb": "GET"
        },
        "response": {
            "body": [
                {
                    "comments": 0,
                    "comments_url": "https://api.github.com/gists/7120387/comments",
                    "commits_url": "https://api.github.com/gists/7120387/commits",
                    "created_at": "2013-10-23T14:58:30Z",
                    "description": null,
                    "files": {},
                    "forks_url": "https://api.github.com/gists/7120387/forks",
                    "git_pull_url": "https://gist.github.com/7120387.git",
                    "git_push_url": "https://gist.github.com/7120387.git",
                    "html_url": "https://gist.github.com/7120387",
                    "id": "7120387",
                    "owner": {
                        "avatar_url": "https://avatars.githubusercontent.com/u/228958?",
                        "events_url": "https://api.github.com/users/lusis/events{/privacy}",
                        "followers_url": "https://api.github.com/users/lusis/followers",
                        "following_url": "https://api.github.com/users/lusis/following{/other_user}",
                        "gists_url": "https://api.github.com/users/lusis/gists{/gist_id}",
                        "gravatar_id": "03a966709300efb4a86ce5ee8f88f696",
                        "html_url": "https://github.com/lusis",
                        "id": 228958,
                        "login": "lusis",
                        "organizations_url": "https://api.github.com/users/lusis/orgs",
                        "received_events_url": "https://api.github.com/users/lusis/received_events",
                        "repos_url": "https://api.github.com/users/lusis/repos",
                        "site_admin": false,
                        "starred_url": "https://api.github.com/users/lusis/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/lusis/subscriptions",
                        "type": "User",
                        "url": "https://api.github.com/users/lusis"
                    },
                    "public": true,
                    "updated_at": "2013-10-23T14:58:30Z",
                    "url": "https://api.github.com/gists/7120387",
                    "user": null
                }
            ],
            "headers": {
                "access-control-allow-credentials": "true",
                "access-control-allow-origin": "*",
                "access-control-expose-headers": "ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval",
                "cache-control": "private, max-age=60, s-maxage=60",
                "content-encoding": "gzip",
                "content-security-policy": "default-src 'none'",
                "content-type": "application/json; charset=utf-8",
                "date": "Sat, 12 Jul 2014 04:07:09 GMT",
                "etag": "\"a32bc94abebea6321982f82b41daf2ac\"",
                "last-modified": "Fri, 11 Jul 2014 19:15:54 GMT",
                "link": "<https://api.github.com/gists/6296553/forks?per_page=1&page=1>; rel=\"first\", <https://api.github.com/gists/6296553/forks?per_page=1&page=1>; rel=\"prev\"",
                "server": "GitHub.com",
                "status": "200 OK",
                "strict-transport-security": "max-age=31536000; includeSubdomains",
                "transfer-encoding": "chunked",
                "vary": "Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding",
                "x-content-type-options": "nosniff",
                "x-frame-options": "deny",
                "x-github-media-type": "github.v3; param=full; format=json",
                "x-github-request-id": "62E81D14:5937:864FCE4:53C0B46D",
                "x-ratelimit-limit": "5000",
                "x-ratelimit-remaining": "4735",
                "x-ratelimit-reset": "1405138218",
                "x-served-by": "03d91026ad8428f4d9966d7434f9d82e",
                "x-xss-protection": "1; mode=block"
            },
            "status": 200
        }
    }
]